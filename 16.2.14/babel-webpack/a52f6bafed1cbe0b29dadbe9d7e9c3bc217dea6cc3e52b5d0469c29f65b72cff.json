{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ubicacion.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass UbicacionComponent {\n  constructor(ubicacionService, http, router) {\n    this.ubicacionService = ubicacionService;\n    this.http = http;\n    this.router = router;\n    this.ubicaciones = [];\n    this.newUbicacion = {};\n    this.editingUbicacion = null;\n    this.error = '';\n    this.apiUrl = 'http://localhost:3000/api/ubicaciones';\n  }\n  ngOnInit() {\n    this.loadUbicaciones();\n  }\n  loadUbicaciones() {\n    this.ubicacionService.getUbicaciones().subscribe(data => {\n      this.ubicaciones = data;\n    }, err => {\n      console.error('Error obteniendo ubicaciones:', err);\n      this.error = 'Error en el servidor al obtener ubicaciones.';\n    });\n  }\n  static #_ = this.ɵfac = function UbicacionComponent_Factory(t) {\n    return new (t || UbicacionComponent)(i0.ɵɵdirectiveInject(i1.UbicacionService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UbicacionComponent,\n    selectors: [[\"app-ubicacion\"]],\n    decls: 0,\n    vars: 0,\n    template: function UbicacionComponent_Template(rf, ctx) {},\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { UbicacionComponent };","map":{"version":3,"names":["UbicacionComponent","constructor","ubicacionService","http","router","ubicaciones","newUbicacion","editingUbicacion","error","apiUrl","ngOnInit","loadUbicaciones","getUbicaciones","subscribe","data","err","console","_","i0","ɵɵdirectiveInject","i1","UbicacionService","i2","HttpClient","i3","Router","_2","selectors","decls","vars","template","UbicacionComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\ubicacion\\ubicacion.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UbicacionService } from 'src/app/services/ubicacion.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})\nexport class UbicacionComponent implements OnInit {\n  ubicaciones: any[] = [];\n  newUbicacion: any = {};\n  editingUbicacion: any = null;\n  error = '';\n\n  private apiUrl = 'http://localhost:3000/api/ubicaciones';\n\n  constructor(\n    private ubicacionService: UbicacionService, private http: HttpClient, private router: Router ) { }\n\n  ngOnInit(): void {\n    this.loadUbicaciones();\n  }\n\n  loadUbicaciones(): void {\n    this.ubicacionService.getUbicaciones().subscribe(\n      data => {\n        this.ubicaciones = data;\n      },\n      err => {\n        console.error('Error obteniendo ubicaciones:', err);\n        this.error = 'Error en el servidor al obtener ubicaciones.';\n      }\n    );\n  }\n/*\n  createUbicacion(): void {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(\n      data => {\n        this.ubicaciones.push(data);\n        this.newUbicacion = {};\n        this.router.navigate(['/ubicaciones']); // Navegar a la lista de ubicaciones después de crear\n      },\n      err => {\n        console.error('Error creando ubicación:', err);\n        this.error = 'Error en el servidor al crear ubicación.';\n      }\n    );\n  }\n\n  editUbicacion(ubicacion: any): void {\n    this.editingUbicacion = { ...ubicacion };\n  }\n\n  updateUbicacion(): void {\n    this.ubicacionService.updateUbicacion(this.editingUbicacion.ubi_id, this.editingUbicacion).subscribe(\n      data => {\n        const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n        if (index !== -1) {\n          this.ubicaciones[index] = data;\n        }\n        this.editingUbicacion = null;\n        this.router.navigate(['/ubicaciones']); // Navegar a la lista de ubicaciones después de actualizar\n      },\n      err => {\n        console.error('Error editando ubicación:', err);\n        this.error = 'Error en el servidor al editar ubicación.';\n      }\n    );\n  }\n\n  deleteUbicacion(ubi_id: number): void {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(\n        data => {\n          this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n          this.router.navigate(['/ubicaciones']); // Navegar a la lista de ubicaciones después de eliminar\n        },\n        err => {\n          console.error('Error eliminando ubicación:', err);\n          this.error = 'Error en el servidor al eliminar ubicación.';\n        }\n      );\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }  */\n}\n"],"mappings":";;;;AAKA,MAKaA,kBAAkB;EAQ7BC,YACUC,gBAAkC,EAAUC,IAAgB,EAAUC,MAAc;IAApF,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IARtF,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,gBAAgB,GAAQ,IAAI;IAC5B,KAAAC,KAAK,GAAG,EAAE;IAEF,KAAAC,MAAM,GAAG,uCAAuC;EAG2C;EAEnGC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACT,gBAAgB,CAACU,cAAc,EAAE,CAACC,SAAS,CAC9CC,IAAI,IAAG;MACL,IAAI,CAACT,WAAW,GAAGS,IAAI;IACzB,CAAC,EACDC,GAAG,IAAG;MACJC,OAAO,CAACR,KAAK,CAAC,+BAA+B,EAAEO,GAAG,CAAC;MACnD,IAAI,CAACP,KAAK,GAAG,8CAA8C;IAC7D,CAAC,CACF;EACH;EAAC,QAAAS,CAAA,G;qBAzBUjB,kBAAkB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB1B,kBAAkB;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAAC,MAAA;EAAA;;SAAlBlC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}