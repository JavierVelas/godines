{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\productos\\productos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductoService } from 'src/app/services/producto.service';\nimport { Router } from '@angular/router';\nimport {au}\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent implements OnInit {\n  scrollPosition = 0;\n  productos: any[] = [];\n  newProducto: any = {};\n  editingProducto: any = null;\n  selectedFile: File | null = null; \n  error = '';\n  filter: string = '';\n  private apiUrl = 'http://localhost:3000/api/productos';\n\n  constructor(\n    private productoService: ProductoService, \n    private router: Router,\n    private authService: AuthService // Asegúrate de inyectar tu AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadProductos();\n  }\n\n  loadProductos(): void {\n    this.productoService.getProductos().subscribe(\n      data => {\n        this.productos = data;\n      },\n      err => {\n        console.error('Error obteniendo productos:', err);\n        this.error = 'Error en el servidor al obtener productos.';\n      }\n    );\n  }\n\n  isAdmin(): boolean {\n    const user = this.authService.getCurrentUser();\n    return user !== null && user.admin_id === 1;\n  }\n\n  onFileChange(event: Event): void {\n    const element = event.target as HTMLInputElement;\n    if (element.files && element.files.length > 0) {\n      this.newProducto.imagen_pro = element.files[0];\n    }\n  }\n\n  createProducto(): void {\n    if (!this.isAdmin()) {\n      console.error('No tienes permiso para crear productos');\n      return;\n    }\n    this.productoService.createProducto(this.newProducto).subscribe(\n      data => {\n        this.productos.push(data);\n        this.newProducto = {};\n        this.router.navigate(['productos']);\n      },\n      err => {\n        console.error('Error creando producto:', err);\n        this.error = 'Error en el servidor al crear producto.';\n      }\n    );\n  }\n\n  editProducto(producto: any): void {\n    if (!this.isAdmin()) {\n      console.error('No tienes permiso para editar productos');\n      return;\n    }\n    this.editingProducto = { ...producto };\n  }\n\n  updateProducto(comp_id: number): void {\n    if (!this.isAdmin()) {\n      console.error('No tienes permiso para actualizar productos');\n      return;\n    }\n    if (this.selectedFile && !this.editingProducto.imagen_pro) {\n      this.productoService.uploadImagen(this.selectedFile).subscribe(\n        response => {\n          this.editingProducto.imagen_pro = response.imageUrl;\n          this.saveUpdatedProducto(comp_id);\n        },\n        error => {\n          console.error('Error al cargar la imagen:', error);\n        }\n      );\n    } else {\n      this.saveUpdatedProducto(comp_id);\n    }\n  }\n\n  saveUpdatedProducto(comp_id: number): void {\n    this.productoService.updateProducto(comp_id, this.editingProducto).subscribe(\n      data => {\n        const index = this.productos.findIndex(p => p.comp_id === comp_id);\n        if (index !== -1) {\n          this.productos[index] = data;\n        }\n        this.editingProducto = null;\n      },\n      err => {\n        console.error('Error actualizando producto:', err);\n        this.error = 'Error en el servidor al actualizar producto.';\n      }\n    );\n  }\n\n  deleteProducto(id: number): void {\n    if (!this.isAdmin()) {\n      console.error('No tienes permiso para eliminar productos');\n      return;\n    }\n    if (id) {\n      this.productoService.deleteProducto(id).subscribe(\n        data => {\n          this.productos = this.productos.filter(p => p.comp_id !== id);\n          this.router.navigate(['productos']);\n        },\n        err => {\n          console.error('Error eliminando producto:', err);\n          this.error = 'Error en el servidor al eliminar producto.';\n        }\n      );\n    } else {\n      console.error('No se encontró el producto:', id);\n    }\n  }\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}