{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ubicacion.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction UbicacionComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction UbicacionComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ubicacion_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ubicacion_r2.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Direcci\\u00F3n: \", ubicacion_r2.direccion, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Ubicaci\\u00F3n ID: \", ubicacion_r2.ubi_id, \"\");\n  }\n}\nclass UbicacionComponent {\n  constructor(ubicacionService, http, router) {\n    this.ubicacionService = ubicacionService;\n    this.http = http;\n    this.router = router;\n    this.ubicaciones = [];\n    this.newUbicacion = {};\n    this.editingUbicacion = null;\n    this.error = '';\n    this.apiUrl = 'http://localhost:3000/api/ubicaciones';\n  }\n  ngOnInit() {\n    this.loadUbicaciones();\n  }\n  loadUbicaciones() {\n    this.ubicacionService.getUbicaciones().subscribe(data => {\n      this.ubicaciones = data;\n    }, err => {\n      console.error('Error obteniendo ubicaciones:', err);\n      this.error = 'Error en el servidor al obtener ubicaciones.';\n    });\n  }\n  static #_ = this.ɵfac = function UbicacionComponent_Factory(t) {\n    return new (t || UbicacionComponent)(i0.ɵɵdirectiveInject(i1.UbicacionService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UbicacionComponent,\n    selectors: [[\"app-ubicacion\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"ubicaciones-container\"], [\"class\", \"error-message\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"error-message\"]],\n    template: function UbicacionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Lista de Ubicaciones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, UbicacionComponent_div_3_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(4, \"ul\");\n        i0.ɵɵtemplate(5, UbicacionComponent_li_5_Template, 7, 3, \"li\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ubicaciones);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { UbicacionComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","error","ubicacion_r2","nombre","ɵɵtextInterpolate1","direccion","ubi_id","UbicacionComponent","constructor","ubicacionService","http","router","ubicaciones","newUbicacion","editingUbicacion","apiUrl","ngOnInit","loadUbicaciones","getUbicaciones","subscribe","data","err","console","_","ɵɵdirectiveInject","i1","UbicacionService","i2","HttpClient","i3","Router","_2","selectors","decls","vars","consts","template","UbicacionComponent_Template","rf","ctx","ɵɵtemplate","UbicacionComponent_div_3_Template","UbicacionComponent_li_5_Template","ɵɵproperty"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\ubicacion\\ubicacion.component.ts","C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\ubicacion\\ubicacion.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UbicacionService } from 'src/app/services/ubicacion.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})\nexport class UbicacionComponent implements OnInit {\n  ubicaciones: any[] = [];\n  newUbicacion: any = {};\n  editingUbicacion: any = null;\n  error = '';\n\n  private apiUrl = 'http://localhost:3000/api/ubicaciones';\n\n  constructor(\n    private ubicacionService: UbicacionService, private http: HttpClient, private router: Router ) { }\n\n  ngOnInit(): void {\n    this.loadUbicaciones();\n  }\n\n  loadUbicaciones(): void {\n    this.ubicacionService.getUbicaciones().subscribe(\n      data => {\n        this.ubicaciones = data;\n      },\n      err => {\n        console.error('Error obteniendo ubicaciones:', err);\n        this.error = 'Error en el servidor al obtener ubicaciones.';\n      }\n    );\n  }\n/*\n  createUbicacion(): void {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(\n      data => {\n        this.ubicaciones.push(data);\n        this.newUbicacion = {};\n        this.router.navigate(['/ubicaciones']); // Navegar a la lista de ubicaciones después de crear\n      },\n      err => {\n        console.error('Error creando ubicación:', err);\n        this.error = 'Error en el servidor al crear ubicación.';\n      }\n    );\n  }\n\n  editUbicacion(ubicacion: any): void {\n    this.editingUbicacion = { ...ubicacion };\n  }\n\n  updateUbicacion(): void {\n    this.ubicacionService.updateUbicacion(this.editingUbicacion.ubi_id, this.editingUbicacion).subscribe(\n      data => {\n        const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n        if (index !== -1) {\n          this.ubicaciones[index] = data;\n        }\n        this.editingUbicacion = null;\n        this.router.navigate(['/ubicaciones']); // Navegar a la lista de ubicaciones después de actualizar\n      },\n      err => {\n        console.error('Error editando ubicación:', err);\n        this.error = 'Error en el servidor al editar ubicación.';\n      }\n    );\n  }\n\n  deleteUbicacion(ubi_id: number): void {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(\n        data => {\n          this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n          this.router.navigate(['/ubicaciones']); // Navegar a la lista de ubicaciones después de eliminar\n        },\n        err => {\n          console.error('Error eliminando ubicación:', err);\n          this.error = 'Error en el servidor al eliminar ubicación.';\n        }\n      );\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }  */\n}\n","\n\n\n<div class=\"ubicaciones-container\">\n  <h2>Lista de Ubicaciones</h2>\n  <div *ngIf=\"error\" class=\"error-message\">{{ error }}</div>\n  <ul>\n    <li *ngFor=\"let ubicacion of ubicaciones\">\n      <h3>{{ ubicacion.nombre }}</h3>\n      <p>Dirección: {{ ubicacion.direccion }}</p>\n      <p>Ubicación ID: {{ ubicacion.ubi_id }}</p>\n     <!-- \n      <img [src]=\"ubicacion.imagen_ubi\" alt=\"{{ ubicacion.nombre }}\" style=\"width: 200px;\">\n      <button (click)=\"editUbicacion(ubicacion)\">Editar</button>\n      <button (click)=\"deleteUbicacion(ubicacion.ubi_id)\">Eliminar</button>\n    </li>\n  </ul>\n  <h3>Crear Ubicación</h3>\n  <form (ngSubmit)=\"createUbicacion()\">\n    <label for=\"nombre\">Nombre:</label>\n    <input type=\"text\" id=\"nombre\" [(ngModel)]=\"newUbicacion.nombre\" name=\"nombre\" required><br>\n    \n    <label for=\"direccion\">Dirección:</label>\n    <input type=\"text\" id=\"direccion\" [(ngModel)]=\"newUbicacion.direccion\" name=\"direccion\" required><br>\n    \n    <label for=\"imagen_ubi\">Imagen URL:</label>\n    <input type=\"text\" id=\"imagen_ubi\" [(ngModel)]=\"newUbicacion.imagen_ubi\" name=\"imagen_ubi\" required><br>\n    \n    <label for=\"admin_id\">Admin ID:</label>\n    <input type=\"number\" id=\"admin_id\" [(ngModel)]=\"newUbicacion.admin_id\" name=\"admin_id\" required><br>\n    \n    <button type=\"submit\">Crear Ubicación</button>\n  </form>\n  \n  <div *ngIf=\"editingUbicacion\">\n    <h3>Editar Ubicación</h3>\n    <form (ngSubmit)=\"updateUbicacion()\">\n      <label for=\"editNombre\">Nombre:</label>\n      <input type=\"text\" id=\"editNombre\" [(ngModel)]=\"editingUbicacion.nombre\" name=\"editNombre\" required><br>\n      \n      <label for=\"editDireccion\">Dirección:</label>\n      <input type=\"text\" id=\"editDireccion\" [(ngModel)]=\"editingUbicacion.direccion\" name=\"editDireccion\" required><br>\n      \n      <label for=\"editImagen_ubi\">Imagen URL:</label>\n      <input type=\"text\" id=\"editImagen_ubi\" [(ngModel)]=\"editingUbicacion.imagen_ubi\" name=\"editImagen_ubi\" required><br>\n      \n      <label for=\"editAdmin_id\">Admin ID:</label>\n      <input type=\"number\" id=\"editAdmin_id\" [(ngModel)]=\"editingUbicacion.admin_id\" name=\"editAdmin_id\" required><br>\n      \n      <button type=\"submit\">Guardar Cambios</button>\n    </form>\n  </div>\n</div>\n-->"],"mappings":";;;;;;;ICKEA,EAAA,CAAAC,cAAA,aAAyC;IAAAD,EAAA,CAAAE,MAAA,GAAW;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAjBH,EAAA,CAAAI,SAAA,GAAW;IAAXJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,KAAA,CAAW;;;;;IAElDP,EAAA,CAAAC,cAAA,SAA0C;IACpCD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC/BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC3CH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAFvCH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAG,YAAA,CAAAC,MAAA,CAAsB;IACvBT,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAU,kBAAA,qBAAAF,YAAA,CAAAG,SAAA,KAAoC;IACpCX,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAU,kBAAA,wBAAAF,YAAA,CAAAI,MAAA,KAAoC;;;ADL7C,MAKaC,kBAAkB;EAQ7BC,YACUC,gBAAkC,EAAUC,IAAgB,EAAUC,MAAc;IAApF,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IARtF,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,gBAAgB,GAAQ,IAAI;IAC5B,KAAAb,KAAK,GAAG,EAAE;IAEF,KAAAc,MAAM,GAAG,uCAAuC;EAG2C;EAEnGC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACR,gBAAgB,CAACS,cAAc,EAAE,CAACC,SAAS,CAC9CC,IAAI,IAAG;MACL,IAAI,CAACR,WAAW,GAAGQ,IAAI;IACzB,CAAC,EACDC,GAAG,IAAG;MACJC,OAAO,CAACrB,KAAK,CAAC,+BAA+B,EAAEoB,GAAG,CAAC;MACnD,IAAI,CAACpB,KAAK,GAAG,8CAA8C;IAC7D,CAAC,CACF;EACH;EAAC,QAAAsB,CAAA,G;qBAzBUhB,kBAAkB,EAAAb,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAlC,EAAA,CAAA8B,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBxB,kBAAkB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP/B5C,EAAA,CAAAC,cAAA,aAAmC;QAC7BD,EAAA,CAAAE,MAAA,2BAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC7BH,EAAA,CAAA8C,UAAA,IAAAC,iCAAA,iBAA0D;QAC1D/C,EAAA,CAAAC,cAAA,SAAI;QACFD,EAAA,CAAA8C,UAAA,IAAAE,gCAAA,gBAA0C;QAD5ChD,EAAA,CAAAG,YAAA,EAAI;;;QADEH,EAAA,CAAAI,SAAA,GAAW;QAAXJ,EAAA,CAAAiD,UAAA,SAAAJ,GAAA,CAAAtC,KAAA,CAAW;QAEWP,EAAA,CAAAI,SAAA,GAAc;QAAdJ,EAAA,CAAAiD,UAAA,YAAAJ,GAAA,CAAA3B,WAAA,CAAc;;;;;;;SDG/BL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}