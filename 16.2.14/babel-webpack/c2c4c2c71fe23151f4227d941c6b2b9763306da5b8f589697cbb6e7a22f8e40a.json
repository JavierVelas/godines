{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/auth'; // URL del backend\n    this.currentUser = null;\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n  setCurrentUser(user) {\n    this.currentUser = user;\n    localStorage.setItem('currentUser', JSON.stringify(user)); // Guarda el usuario en localStorage\n  }\n\n  getCurrentUser() {\n    const user = localStorage.getItem('currentUser');\n    return user ? JSON.parse(user) : null;\n  }\n  logout() {\n    this.currentUser = null;\n    localStorage.removeItem('currentUser');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","currentUser","login","credentials","post","setCurrentUser","user","localStorage","setItem","JSON","stringify","getCurrentUser","getItem","parse","logout","removeItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'http://localhost:3000/auth'; // URL del backend\r\n  private currentUser: { admin_id: number, usuario: string } | null = null;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials: { usuario: string, contrasena: string }): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/login`, credentials);\r\n  }\r\n\r\n  setCurrentUser(user: { admin_id: number, usuario: string }): void {\r\n    this.currentUser = user;\r\n    localStorage.setItem('currentUser', JSON.stringify(user)); // Guarda el usuario en localStorage\r\n  }\r\n\r\n  getCurrentUser(): { admin_id: number, usuario: string } | null {\r\n    const user = localStorage.getItem('currentUser');\r\n    return user ? JSON.parse(user) : null;\r\n  }\r\n\r\n  logout(): void {\r\n    this.currentUser = null;\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n}\r\n"],"mappings":";;AAIA,MAGaA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,4BAA4B,CAAC,CAAC;IACvC,KAAAC,WAAW,GAAiD,IAAI;EAEhC;EAExCC,KAAKA,CAACC,WAAoD;IACxD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,WAAW,CAAC;EACjE;EAEAE,cAAcA,CAACC,IAA2C;IACxD,IAAI,CAACL,WAAW,GAAGK,IAAI;IACvBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7D;;EAEAK,cAAcA,CAAA;IACZ,MAAML,IAAI,GAAGC,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC;IAChD,OAAON,IAAI,GAAGG,IAAI,CAACI,KAAK,CAACP,IAAI,CAAC,GAAG,IAAI;EACvC;EAEAQ,MAAMA,CAAA;IACJ,IAAI,CAACb,WAAW,GAAG,IAAI;IACvBM,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAvBUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEP3B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}