{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UbicacionService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/ubicacion'; // URL del backend\n  }\n\n  getUbicaciones() {\n    return this.http.get(this.apiUrl);\n  }\n  static #_ = this.ɵfac = function UbicacionService_Factory(t) {\n    return new (t || UbicacionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UbicacionService,\n    factory: UbicacionService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { UbicacionService };","map":{"version":3,"names":["UbicacionService","constructor","http","apiUrl","getUbicaciones","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\src\\app\\services\\ubicacion.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UbicacionService {\r\n  private apiUrl = 'http://localhost:3000/api/ubicacion'; // URL del backend\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUbicaciones(): Observable<any> {\r\n    return this.http.get<any>(this.apiUrl);\r\n  }\r\n  \r\n    // Obtener un producto por ID\r\n   // getProductoById(id: number): Observable<any> {\r\n      //return this.http.get<any>(`${this.apiUrl}/productos/${id}`);\r\n    }\r\n  \r\n    // Crear un nuevo producto\r\n   // createProducto(producto: any): Observable<any> {\r\n     // return this.http.post<any>(`${this.apiUrl}/productos`, producto);\r\n   // }\r\n  \r\n    // Actualizar un producto existente\r\n   // updateProducto(id: number, producto: any): Observable<any> {\r\n      //return this.http.put<any>(`${this.apiUrl}/productos/${id}`, producto);\r\n  //  }\r\n  \r\n    // Eliminar un producto por ID\r\n    //deleteProducto(id: number): Observable<any> {\r\n      //return this.http.delete<any>(`${this.apiUrl}/productos/${id}`);\r\n  //  }\r\n\r\n\r\n\r\n}}\r\n\r\n\r\n"],"mappings":";;AAIA,MAGaA,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC,CAAC,CAAC;EAEhB;;EAExCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC;EACxC;EAAC,QAAAG,CAAA,G;qBAPUN,gBAAgB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBX,gBAAgB;IAAAY,OAAA,EAAhBZ,gBAAgB,CAAAa,IAAA;IAAAC,UAAA,EAFf;EAAM;;SAEPd,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}