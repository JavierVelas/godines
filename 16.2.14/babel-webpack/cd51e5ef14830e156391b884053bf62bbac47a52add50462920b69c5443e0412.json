{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\productos\\productos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {}\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent implements OnInit {\n  productos: any[] = [];\n  newProducto: any = {\n    nombre: '',\n    tipo: '',\n    precio: 0,\n    descripcion: '',\n    imagen_pro: '',\n    admin_id: 1\n  };\n  editingProducto: any = null;\n  error = '';\n\n  constructor(private productosService: ProductosService) { }\n\n  ngOnInit(): void {\n    this.loadProductos();\n  }\n\n  loadProductos(): void {\n    this.productosService.getProductos().subscribe(\n      data => {\n        this.productos = data;\n      },\n      err => {\n        console.error('Error obteniendo productos:', err);\n        this.error = 'Error en el servidor al obtener productos.';\n      }\n    );\n  }\n\n  createProducto(): void {\n    this.productosService.createProducto(this.newProducto).subscribe(\n      data => {\n        this.productos.push(data);\n        this.newProducto = {\n          nombre: '',\n          tipo: '',\n          precio: 0,\n          descripcion: '',\n          imagen_pro: '',\n          admin_id: 1\n        };\n      },\n      err => {\n        console.error('Error creando producto:', err);\n        this.error = 'Error en el servidor al crear producto.';\n      }\n    );\n  }\n\n  editProducto(producto: any): void {\n    this.editingProducto = { ...producto };\n  }\n\n  updateProducto(): void {\n    this.productosService.updateProducto(this.editingProducto.id, this.editingProducto).subscribe(\n      data => {\n        const index = this.productos.findIndex(p => p.id === this.editingProducto.id);\n        if (index !== -1) {\n          this.productos[index] = data;\n        }\n        this.editingProducto = null;\n      },\n      err => {\n        console.error('Error editando producto:', err);\n        this.error = 'Error en el servidor al editar producto.';\n      }\n    );\n  }\n\n  deleteProducto(id: number): void {\n    this.productosService.deleteProducto(id).subscribe(\n      data => {\n        this.productos = this.productos.filter(p => p.id !== id);\n      },\n      err => {\n        console.error('Error eliminando producto:', err);\n        this.error = 'Error en el servidor al eliminar producto.';\n      }\n    );\n  }\n}\n\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}