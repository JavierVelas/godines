{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductosComponent = class ProductosComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.productos = [];\n    this.newProducto = {};\n    this.editingProducto = null;\n    this.error = '';\n    this.apiUrl = 'http://localhost:3000/api/productos';\n  }\n  ngOnInit() {\n    this.loadProductos();\n  }\n  loadProductos() {\n    this.productoService.getProductos().subscribe(data => {\n      this.productos = data;\n    }, err => {\n      console.error('Error obteniendo productos:', err);\n      this.error = 'Error en el servidor al obtener productos.';\n    });\n  }\n  createProducto() {\n    this.productoService.createProducto(this.newProducto).subscribe(data => {\n      this.productos.push(data);\n      this.newProducto = {};\n      this.router.navigate(['productos']); // Navegar a la lista de productos después de crear\n    }, err => {\n      console.error('Error creando producto:', err);\n      this.error = 'Error en el servidor al crear producto.';\n    });\n  }\n  editProducto(producto) {\n    this.editingProducto = {\n      ...producto\n    };\n  }\n  updateProducto() {\n    this.productoService.updateProducto(this.editingProducto.id, this.editingProducto).subscribe(data => {\n      const index = this.productos.findIndex(p => p.id === this.editingProducto.id);\n      if (index !== -1) {\n        this.productos[index] = data;\n      }\n      this.editingProducto = null;\n      this.router.navigate(['productos']); // Navegar a la lista de productos después de actualizar\n    }, err => {\n      console.error('Error editando producto:', err);\n      this.error = 'Error en el servidor al editar producto.';\n    });\n  }\n  deleteProducto(id) {\n    if (id) {\n      this.productoService.deleteProducto(id).subscribe(data => {\n        this.productos = this.productos.filter(p => p.id !== id);\n        this.router.navigate(['productos']); // Navegar a la lista de productos después de eliminar\n      }, err => {\n        console.error('Error eliminando producto:', err);\n        this.error = 'Error en el servidor al eliminar producto.';\n      });\n    } else {\n      console.error('ID de producto no válido:', id);\n    }\n  }\n};\nProductosComponent = __decorate([Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})], ProductosComponent);\nexport { ProductosComponent };","map":{"version":3,"names":["Component","ProductosComponent","constructor","http","router","productos","newProducto","editingProducto","error","apiUrl","ngOnInit","loadProductos","productoService","getProductos","subscribe","data","err","console","createProducto","push","navigate","editProducto","producto","updateProducto","id","index","findIndex","p","deleteProducto","filter","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\productos\\productos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductoService } from 'src/app/services/producto.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent implements OnInit {\n  productos: any[] = [];\n  newProducto: any = {};\n  editingProducto: any = null;\n  error = '';\n\n\n  private apiUrl = 'http://localhost:3000/api/productos';\n  constructor(private http: HttpClient, private router:Router) { }\n\n  ngOnInit(): void {\n    this.loadProductos();\n  }\n\n  loadProductos(): void {\n    this.productoService.getProductos().subscribe(\n      data => {\n        this.productos = data;\n      },\n      err => {\n        console.error('Error obteniendo productos:', err);\n        this.error = 'Error en el servidor al obtener productos.';\n      }\n    );\n  }\n\n  createProducto(): void {\n    this.productoService.createProducto(this.newProducto).subscribe(\n      data => {\n        this.productos.push(data);\n        this.newProducto = {};\n        this.router.navigate(['productos']); // Navegar a la lista de productos después de crear\n      },\n      err => {\n        console.error('Error creando producto:', err);\n        this.error = 'Error en el servidor al crear producto.';\n      }\n    );\n  }\n\n  editProducto(producto: any): void {\n    this.editingProducto = { ...producto };\n  }\n\n  updateProducto(): void {\n    this.productoService.updateProducto(this.editingProducto.id, this.editingProducto).subscribe(\n      data => {\n        const index = this.productos.findIndex(p => p.id === this.editingProducto.id);\n        if (index !== -1) {\n          this.productos[index] = data;\n        }\n        this.editingProducto = null;\n        this.router.navigate(['productos']); // Navegar a la lista de productos después de actualizar\n      },\n      err => {\n        console.error('Error editando producto:', err);\n        this.error = 'Error en el servidor al editar producto.';\n      }\n    );\n  }\n\n  deleteProducto(id: number): void {\n    if (id) {\n      this.productoService.deleteProducto(id).subscribe(\n        data => {\n          this.productos = this.productos.filter(p => p.id !== id);\n          this.router.navigate(['productos']); // Navegar a la lista de productos después de eliminar\n        },\n        err => {\n          console.error('Error eliminando producto:', err);\n          this.error = 'Error en el servidor al eliminar producto.';\n        }\n      );\n    } else {\n      console.error('ID de producto no válido:', id);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}