{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/feedback.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass FeedbackComponent {\n  constructor(feedbackService, http, router) {\n    this.feedbackService = feedbackService;\n    this.http = http;\n    this.router = router;\n    this.feedbacks = [];\n    this.newFeedback = {};\n    this.editingFeedbacks = null;\n    this.error = '';\n    this.apiUrl = 'http://localhost:3000/api/feedback';\n  }\n  ngOnInit() {\n    this.loadFeedbacks();\n  }\n  loadFeedbacks() {\n    this.feedbackService.getFeedbacks().subscribe(data => {\n      this.feedbacks = data;\n    }, err => {\n      console.error('Error obteniendo feedbacks:', err);\n      this.error = 'Error en el servidor al obtener feedbacks.';\n    });\n  }\n  createFeedback() {\n    this.feedbackService.createFeedback(this.newFeedback).subscribe(data => {\n      this.feedbacks.push(data);\n      this.newFeedback = {};\n      this.router.navigate(['feedback']); // Navegar a la lista de ubicaciones después de crear\n    }, err => {\n      console.error('Error creando feedbacks:', err);\n      this.error = 'Error en el servidor al crear feedbacks.';\n    });\n  }\n  editFeedback(feedback) {\n    this.editingFeedbacks = {\n      ...feedback\n    };\n  }\n  updateFeedback() {\n    this.feedbackService.updateFeedback(this.editingFeedbacks.fb_id, this.editingFeedbacks).subscribe(data => {\n      const index = this.feedbacks.findIndex(u => u.ubi_id === this.editingFeedbacks.ubi_id);\n      if (index !== -1) {\n        this.feedbacks[index] = data;\n      }\n      this.editingFeedbacks = null;\n      this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de actualizar\n    }, err => {\n      console.error('Error editando ubicación:', err);\n      this.error = 'Error en el servidor al editar ubicación.';\n    });\n  }\n  deleteFeedback(fb_id) {\n    if (fb_id) {\n      this.feedbackService.deleteFeedback(fb_id).subscribe(data => {\n        this.feedbacks = this.feedbacks.filter(u => u.fb_id !== fb_id);\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de eliminar\n      }, err => {\n        console.error('Error eliminando ubicación:', err);\n        this.error = 'Error en el servidor al eliminar ubicación.';\n      });\n    } else {\n      console.error('ID de ubicación no válido:', fb_id);\n    }\n  }\n  static #_ = this.ɵfac = function FeedbackComponent_Factory(t) {\n    return new (t || FeedbackComponent)(i0.ɵɵdirectiveInject(i1.FeedbackService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FeedbackComponent,\n    selectors: [[\"app-feedback\"]],\n    decls: 2,\n    vars: 0,\n    template: function FeedbackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"feedback works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { FeedbackComponent };","map":{"version":3,"names":["FeedbackComponent","constructor","feedbackService","http","router","feedbacks","newFeedback","editingFeedbacks","error","apiUrl","ngOnInit","loadFeedbacks","getFeedbacks","subscribe","data","err","console","createFeedback","push","navigate","editFeedback","feedback","updateFeedback","fb_id","index","findIndex","u","ubi_id","deleteFeedback","filter","_","i0","ɵɵdirectiveInject","i1","FeedbackService","i2","HttpClient","i3","Router","_2","selectors","decls","vars","template","FeedbackComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\feedback\\feedback.component.ts","C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\feedback\\feedback.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from 'src/app/services/feedback.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent {\n\n  feedbacks: any[] = [];\n  newFeedback: any = {};\n  editingFeedbacks: any = null;\n  error = '';\n\n  private apiUrl = 'http://localhost:3000/api/feedback';\n\n  constructor(\n    private feedbackService: FeedbackService, private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadFeedbacks();\n  }\n\n  loadFeedbacks(): void {\n    this.feedbackService.getFeedbacks().subscribe(\n      data => {\n        this.feedbacks = data;\n      },\n      err => {\n        console.error('Error obteniendo feedbacks:', err);\n        this.error = 'Error en el servidor al obtener feedbacks.';\n      }\n    );\n  }\n\n  createFeedback(): void {\n    this.feedbackService.createFeedback(this.newFeedback).subscribe(\n      data => {\n        this.feedbacks.push(data);\n        this.newFeedback = {};\n        this.router.navigate(['feedback']); // Navegar a la lista de ubicaciones después de crear\n      },\n      err => {\n        console.error('Error creando feedbacks:', err);\n        this.error = 'Error en el servidor al crear feedbacks.';\n      }\n    );\n  }\n\n  editFeedback(feedback: any): void {\n    this.editingFeedbacks = { ...feedback };\n  }\n\n  updateFeedback(): void {\n    this.feedbackService.updateFeedback(this.editingFeedbacks.fb_id, this.editingFeedbacks).subscribe(\n      data => {\n        const index = this.feedbacks.findIndex(u => u.ubi_id === this.editingFeedbacks.ubi_id);\n        if (index !== -1) {\n          this.feedbacks[index] = data;\n        }\n        this.editingFeedbacks = null;\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de actualizar\n      },\n      err => {\n        console.error('Error editando ubicación:', err);\n        this.error = 'Error en el servidor al editar ubicación.';\n      }\n    );\n  }\n\n  deleteFeedback(fb_id: number): void {\n    if (fb_id) {\n      this.feedbackService.deleteFeedback(fb_id).subscribe(\n        data => {\n          this.feedbacks = this.feedbacks.filter(u => u.fb_id !== fb_id);\n          this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de eliminar\n        },\n        err => {\n          console.error('Error eliminando ubicación:', err);\n          this.error = 'Error en el servidor al eliminar ubicación.';\n        }\n      );\n    } else {\n      console.error('ID de ubicación no válido:', fb_id);\n    }\n  }  \n\n\n\n\n}\n","<p>feedback works!</p>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}