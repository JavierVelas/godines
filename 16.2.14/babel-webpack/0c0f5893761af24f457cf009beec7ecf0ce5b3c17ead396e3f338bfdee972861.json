{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FeedbackComponent = class FeedbackComponent {\n  constructor(feedbackService, http, router) {\n    this.feedbackService = feedbackService;\n    this.http = http;\n    this.router = router;\n    this.feedbacks = [];\n    this.newFeedback = {};\n    this.editingFeedbacks = null;\n    this.error = '';\n    this.apiUrl = 'http://localhost:3000/api/feedback';\n  }\n  ngOnInit() {\n    this.loadFeedbacks();\n  }\n  loadFeedbacks() {\n    this.feedbackService.getFeedbacks().subscribe(data => {\n      this.feedbacks = data;\n    }, err => {\n      console.error('Error obteniendo feedbacks:', err);\n      this.error = 'Error en el servidor al obtener feedbacks.';\n    });\n  }\n  createUbicacion() {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(data => {\n      this.ubicaciones.push(data);\n      this.newUbicacion = {};\n      this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de crear\n    }, err => {\n      console.error('Error creando ubicación:', err);\n      this.error = 'Error en el servidor al crear ubicación.';\n    });\n  }\n  editUbicacion(ubicacion) {\n    this.editingUbicacion = {\n      ...ubicacion\n    };\n  }\n  updateUbicacion() {\n    this.ubicacionService.updateUbicacion(this.editingUbicacion.ubi_id, this.editingUbicacion).subscribe(data => {\n      const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n      if (index !== -1) {\n        this.ubicaciones[index] = data;\n      }\n      this.editingUbicacion = null;\n      this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de actualizar\n    }, err => {\n      console.error('Error editando ubicación:', err);\n      this.error = 'Error en el servidor al editar ubicación.';\n    });\n  }\n  deleteUbicacion(ubi_id) {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(data => {\n        this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de eliminar\n      }, err => {\n        console.error('Error eliminando ubicación:', err);\n        this.error = 'Error en el servidor al eliminar ubicación.';\n      });\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }\n};\nFeedbackComponent = __decorate([Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})], FeedbackComponent);\nexport { FeedbackComponent };","map":{"version":3,"names":["Component","FeedbackComponent","constructor","feedbackService","http","router","feedbacks","newFeedback","editingFeedbacks","error","apiUrl","ngOnInit","loadFeedbacks","getFeedbacks","subscribe","data","err","console","createUbicacion","ubicacionService","newUbicacion","ubicaciones","push","navigate","editUbicacion","ubicacion","editingUbicacion","updateUbicacion","ubi_id","index","findIndex","u","deleteUbicacion","filter","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\feedback\\feedback.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from 'src/app/services/feedback.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent {\n\n  feedbacks: any[] = [];\n  newFeedback: any = {};\n  editingFeedbacks: any = null;\n  error = '';\n\n  private apiUrl = 'http://localhost:3000/api/feedback';\n\n  constructor(\n    private feedbackService: FeedbackService, private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadFeedbacks();\n  }\n\n  loadFeedbacks(): void {\n    this.feedbackService.getFeedbacks().subscribe(\n      data => {\n        this.feedbacks = data;\n      },\n      err => {\n        console.error('Error obteniendo feedbacks:', err);\n        this.error = 'Error en el servidor al obtener feedbacks.';\n      }\n    );\n  }\n\n  createUbicacion(): void {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(\n      data => {\n        this.ubicaciones.push(data);\n        this.newUbicacion = {};\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de crear\n      },\n      err => {\n        console.error('Error creando ubicación:', err);\n        this.error = 'Error en el servidor al crear ubicación.';\n      }\n    );\n  }\n\n  editUbicacion(ubicacion: any): void {\n    this.editingUbicacion = { ...ubicacion };\n  }\n\n  updateUbicacion(): void {\n    this.ubicacionService.updateUbicacion(this.editingUbicacion.ubi_id, this.editingUbicacion).subscribe(\n      data => {\n        const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n        if (index !== -1) {\n          this.ubicaciones[index] = data;\n        }\n        this.editingUbicacion = null;\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de actualizar\n      },\n      err => {\n        console.error('Error editando ubicación:', err);\n        this.error = 'Error en el servidor al editar ubicación.';\n      }\n    );\n  }\n\n  deleteUbicacion(ubi_id: number): void {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(\n        data => {\n          this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n          this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de eliminar\n        },\n        err => {\n          console.error('Error eliminando ubicación:', err);\n          this.error = 'Error en el servidor al eliminar ubicación.';\n        }\n      );\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }  \n\n\n\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}