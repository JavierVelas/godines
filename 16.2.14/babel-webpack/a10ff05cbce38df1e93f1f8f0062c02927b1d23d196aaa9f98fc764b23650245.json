{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UbicacionComponent = class UbicacionComponent {\n  constructor(gimnasioService, router) {\n    this.gimnasioService = gimnasioService;\n    this.router = router;\n    this.gimnasios = []; // Cambia la variable a gimnasios\n    this.newGimnasio = {}; // Cambia el nombre a newGimnasio\n    this.editingGimnasio = null; // Cambia el nombre a editingGimnasio\n    this.error = '';\n  } // Cambia el servicio a GimnasioService\n  ngOnInit() {\n    this.loadGimnasios(); // Cambia el nombre del método a loadGimnasios\n  }\n\n  loadGimnasios() {\n    this.gimnasioService.getGimnasios().subscribe(\n    // Cambia el método para obtener gimnasios\n    // Cambia el método para obtener gimnasios\n    data => {\n      this.gimnasios = data;\n    }, err => {\n      console.error('Error obteniendo gimnasios:', err);\n      this.error = 'Error en el servidor al obtener gimnasios.';\n    });\n  }\n  createGimnasio() {\n    this.gimnasioService.createGimnasio(this.newGimnasio).subscribe(\n    // Cambia el método para crear gimnasios\n    // Cambia el método para crear gimnasios\n    data => {\n      this.gimnasios.push(data);\n      this.newGimnasio = {};\n      this.editingGimnasio = null;\n    }, err => {\n      console.error('Error al añadir el gimnasio:', err);\n      this.error = 'Error en el servidor al añadir el gimnasio.';\n    });\n  }\n  editGimnasio(gimnasio) {\n    this.editingGimnasio = {\n      ...gimnasio\n    }; // Cambia el método para editar gimnasios\n  }\n\n  updateGimnasio(id_gimnasio) {\n    this.gimnasioService.updateGimnasio(id_gimnasio, this.editingGimnasio).subscribe(\n    // Cambia el método para actualizar gimnasios\n    // Cambia el método para actualizar gimnasios\n    data => {\n      const index = this.gimnasios.findIndex(g => g.id_gimnasio === id_gimnasio);\n      if (index !== -1) {\n        this.gimnasios[index] = data;\n      }\n      this.editingGimnasio = null;\n    }, err => {\n      console.error('Error actualizando gimnasio:', err);\n      this.error = 'Error en el servidor al actualizar gimnasio.';\n    });\n  }\n  deleteGimnasio(id_gimnasio) {\n    if (id_gimnasio) {\n      this.gimnasioService.deleteGimnasio(id_gimnasio).subscribe(\n      // Cambia el método para eliminar gimnasios\n      // Cambia el método para eliminar gimnasios\n      data => {\n        this.gimnasios = this.gimnasios.filter(g => g.id_gimnasio !== id_gimnasio);\n      }, err => {\n        console.error('Error eliminando gimnasio:', err);\n        this.error = 'Error en el servidor al eliminar gimnasio.';\n      });\n    } else {\n      console.error('ID de gimnasio no válido:', id_gimnasio);\n    }\n  }\n  cancelEdit() {\n    this.editingGimnasio = null; // Cambia el método para cancelar edición\n  }\n};\n\nUbicacionComponent = __decorate([Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})], UbicacionComponent);\nexport { UbicacionComponent };","map":{"version":3,"names":["Component","UbicacionComponent","constructor","gimnasioService","router","gimnasios","newGimnasio","editingGimnasio","error","ngOnInit","loadGimnasios","getGimnasios","subscribe","data","err","console","createGimnasio","push","editGimnasio","gimnasio","updateGimnasio","id_gimnasio","index","findIndex","g","deleteGimnasio","filter","cancelEdit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\cardio express\\frontend\\componentes\\ubicacion\\ubicacion.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GimnasioService } from 'src/app/services/gimnasio.service'; // Asegúrate de que estás usando el servicio correcto\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})\nexport class UbicacionComponent implements OnInit {\n  gimnasios: any[] = []; // Cambia la variable a gimnasios\n  newGimnasio: any = {}; // Cambia el nombre a newGimnasio\n  editingGimnasio: any = null; // Cambia el nombre a editingGimnasio\n  error = '';\n\n  constructor(private gimnasioService: GimnasioService, private router: Router) { } // Cambia el servicio a GimnasioService\n\n  ngOnInit(): void {\n    this.loadGimnasios(); // Cambia el nombre del método a loadGimnasios\n  }\n\n  loadGimnasios(): void {\n    this.gimnasioService.getGimnasios().subscribe( // Cambia el método para obtener gimnasios\n      data => {\n        this.gimnasios = data;\n      },\n      err => {\n        console.error('Error obteniendo gimnasios:', err);\n        this.error = 'Error en el servidor al obtener gimnasios.';\n      }\n    );\n  }\n\n  createGimnasio(): void {\n    this.gimnasioService.createGimnasio(this.newGimnasio).subscribe( // Cambia el método para crear gimnasios\n      data => {\n        this.gimnasios.push(data);\n        this.newGimnasio = {};\n        this.editingGimnasio = null;\n      },\n      err => {\n        console.error('Error al añadir el gimnasio:', err);\n        this.error = 'Error en el servidor al añadir el gimnasio.';\n      }\n    );\n  }\n\n  editGimnasio(gimnasio: any): void {\n    this.editingGimnasio = { ...gimnasio }; // Cambia el método para editar gimnasios\n  }\n\n  updateGimnasio(id_gimnasio: number): void {\n    this.gimnasioService.updateGimnasio(id_gimnasio, this.editingGimnasio).subscribe( // Cambia el método para actualizar gimnasios\n      data => {\n        const index = this.gimnasios.findIndex(g => g.id_gimnasio === id_gimnasio);\n        if (index !== -1) {\n          this.gimnasios[index] = data;\n        }\n        this.editingGimnasio = null;\n      },\n      err => {\n        console.error('Error actualizando gimnasio:', err);\n        this.error = 'Error en el servidor al actualizar gimnasio.';\n      }\n    );\n  }\n\n  deleteGimnasio(id_gimnasio: number): void {\n    if (id_gimnasio) {\n      this.gimnasioService.deleteGimnasio(id_gimnasio).subscribe( // Cambia el método para eliminar gimnasios\n        data => {\n          this.gimnasios = this.gimnasios.filter(g => g.id_gimnasio !== id_gimnasio);\n        },\n        err => {\n          console.error('Error eliminando gimnasio:', err);\n          this.error = 'Error en el servidor al eliminar gimnasio.';\n        }\n      );\n    } else {\n      console.error('ID de gimnasio no válido:', id_gimnasio);\n    }\n  }\n\n  cancelEdit(): void {\n    this.editingGimnasio = null; // Cambia el método para cancelar edición\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}