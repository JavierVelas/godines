{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UbicacionComponent = class UbicacionComponent {\n  constructor(ubicacionService, http, router) {\n    this.ubicacionService = ubicacionService;\n    this.http = http;\n    this.router = router;\n    this.ubicaciones = [];\n    this.newUbicacion = {};\n    this.editingUbicacion = null;\n    this.error = '';\n    this.apiUrl = 'http://localhost:3000/api/ubicaciones';\n  }\n  ngOnInit() {\n    this.loadUbicaciones();\n  }\n  loadUbicaciones() {\n    this.ubicacionService.getUbicaciones().subscribe(data => {\n      this.ubicaciones = data;\n    }, err => {\n      console.error('Error obteniendo ubicaciones:', err);\n      this.error = 'Error en el servidor al obtener ubicaciones.';\n    });\n  }\n  createUbicacion() {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(data => {\n      this.ubicaciones.push(data);\n      this.newUbicacion = {};\n      this.router.navigate(['ubicaciones']); // Navegar a la lista de ubicaciones después de crear\n    }, err => {\n      console.error('Error creando ubicación:', err);\n      this.error = 'Error en el servidor al crear ubicación.';\n    });\n  }\n  editUbicacion(ubicacion) {\n    this.editingUbicacion = {\n      ...ubicacion\n    };\n  }\n  updateUbicacion() {\n    this.ubicacionService.updateUbicacion(this.editingUbicacion.ubi_id, this.editingUbicacion).subscribe(data => {\n      const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n      if (index !== -1) {\n        this.ubicaciones[index] = data;\n      }\n      this.editingUbicacion = null;\n      this.router.navigate(['ubicaciones']); // Navegar a la lista de ubicaciones después de actualizar\n    }, err => {\n      console.error('Error editando ubicación:', err);\n      this.error = 'Error en el servidor al editar ubicación.';\n    });\n  }\n  deleteUbicacion(ubi_id) {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(data => {\n        this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n        this.router.navigate(['ubicaciones']); // Navegar a la lista de ubicaciones después de eliminar\n      }, err => {\n        console.error('Error eliminando ubicación:', err);\n        this.error = 'Error en el servidor al eliminar ubicación.';\n      });\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }\n};\nUbicacionComponent = __decorate([Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})], UbicacionComponent);\nexport { UbicacionComponent };","map":{"version":3,"names":["Component","UbicacionComponent","constructor","ubicacionService","http","router","ubicaciones","newUbicacion","editingUbicacion","error","apiUrl","ngOnInit","loadUbicaciones","getUbicaciones","subscribe","data","err","console","createUbicacion","push","navigate","editUbicacion","ubicacion","updateUbicacion","ubi_id","index","findIndex","u","deleteUbicacion","filter","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\ubicacion\\ubicacion.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UbicacionService } from 'src/app/services/ubicacion.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})\nexport class UbicacionComponent implements OnInit {\n  ubicaciones: any[] = [];\n  newUbicacion: any = {};\n  editingUbicacion: any = null;\n  error = '';\n\n  private apiUrl = 'http://localhost:3000/api/ubicaciones';\n\n  constructor(\n    private ubicacionService: UbicacionService, private http: HttpClient, private router: Router ) { }\n\n  ngOnInit(): void {\n    this.loadUbicaciones();\n  }\n\n  loadUbicaciones(): void {\n    this.ubicacionService.getUbicaciones().subscribe(\n      data => {\n        this.ubicaciones = data;\n      },\n      err => {\n        console.error('Error obteniendo ubicaciones:', err);\n        this.error = 'Error en el servidor al obtener ubicaciones.';\n      }\n    );\n  }\n\n  createUbicacion(): void {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(\n      data => {\n        this.ubicaciones.push(data);\n        this.newUbicacion = {};\n        this.router.navigate(['ubicaciones']); // Navegar a la lista de ubicaciones después de crear\n      },\n      err => {\n        console.error('Error creando ubicación:', err);\n        this.error = 'Error en el servidor al crear ubicación.';\n      }\n    );\n  }\n\n  editUbicacion(ubicacion: any): void {\n    this.editingUbicacion = { ...ubicacion };\n  }\n\n  updateUbicacion(): void {\n    this.ubicacionService.updateUbicacion(this.editingUbicacion.ubi_id, this.editingUbicacion).subscribe(\n      data => {\n        const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n        if (index !== -1) {\n          this.ubicaciones[index] = data;\n        }\n        this.editingUbicacion = null;\n        this.router.navigate(['ubicaciones']); // Navegar a la lista de ubicaciones después de actualizar\n      },\n      err => {\n        console.error('Error editando ubicación:', err);\n        this.error = 'Error en el servidor al editar ubicación.';\n      }\n    );\n  }\n\n  deleteUbicacion(ubi_id: number): void {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(\n        data => {\n          this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n          this.router.navigate(['ubicaciones']); // Navegar a la lista de ubicaciones después de eliminar\n        },\n        err => {\n          console.error('Error eliminando ubicación:', err);\n          this.error = 'Error en el servidor al eliminar ubicación.';\n        }\n      );\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }  \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}