{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UbicacionComponent = class UbicacionComponent {\n  constructor(ubicacionService, router) {\n    this.ubicacionService = ubicacionService;\n    this.router = router;\n    this.scrollPosition = 0;\n    this.ubicaciones = [];\n    this.newUbicacion = {};\n    this.editingUbicacion = null;\n    this.error = '';\n  }\n  ngOnInit() {\n    this.loadUbicaciones();\n  }\n  scrollRight() {\n    this.scrollPosition += 200; // Ajusta este valor según necesites\n  }\n\n  scrollLeft() {\n    this.scrollPosition -= 200; // Ajusta este valor según necesites\n  }\n\n  loadUbicaciones() {\n    this.ubicacionService.getUbicaciones().subscribe(data => {\n      this.ubicaciones = data;\n    }, err => {\n      console.error('Error obteniendo ubicaciones:', err);\n      this.error = 'Error en el servidor al obtener ubicaciones.';\n    });\n  }\n  createUbicacion() {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(data => {\n      this.ubicaciones.push(data);\n      this.newUbicacion = {};\n      this.router.navigate(['ubicacion']);\n    }, err => {\n      console.error('Error al añadir la ubicación:', err);\n      this.error = 'Error en el servidor al añadir la ubicación.';\n    });\n  }\n  saveUbicacion(ubicacion) {\n    this.ubicacionService.createUbicacion(ubicacion).subscribe(data => {\n      this.ubicaciones.push(data);\n      this.newUbicacion = {};\n      this.router.navigate(['ubicacion']);\n    }, err => {\n      console.error('Error creando ubicación:', err);\n      this.error = 'Error en el servidor al crear ubicación.';\n    });\n  }\n  editUbicacion(ubicacion) {\n    this.editingUbicacion = {\n      ...ubicacion\n    };\n  }\n  updateUbicacion(ubi_id) {\n    this.saveUpdatedUbicacion(ubi_id);\n  }\n  saveUpdatedUbicacion(ubi_id) {\n    this.ubicacionService.updateUbicacion(ubi_id, this.editingUbicacion).subscribe(data => {\n      const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n      if (index !== -1) {\n        this.ubicaciones[index] = data;\n      }\n      this.editingUbicacion = null;\n      this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de actualizar\n    }, err => {\n      console.error('Error actualizando ubicación:', err);\n      this.error = 'Error en el servidor al actualizar ubicación.';\n    });\n  }\n  deleteUbicacion(ubi_id) {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(data => {\n        this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de eliminar\n      }, err => {\n        console.error('Error eliminando ubicación:', err);\n        this.error = 'Error en el servidor al eliminar ubicación.';\n      });\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }\n};\nUbicacionComponent = __decorate([Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})], UbicacionComponent);\nexport { UbicacionComponent };","map":{"version":3,"names":["Component","UbicacionComponent","constructor","ubicacionService","router","scrollPosition","ubicaciones","newUbicacion","editingUbicacion","error","ngOnInit","loadUbicaciones","scrollRight","scrollLeft","getUbicaciones","subscribe","data","err","console","createUbicacion","push","navigate","saveUbicacion","ubicacion","editUbicacion","updateUbicacion","ubi_id","saveUpdatedUbicacion","index","findIndex","u","deleteUbicacion","filter","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\ubicacion\\ubicacion.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UbicacionService } from 'src/app/services/ubicacion.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ubicacion',\n  templateUrl: './ubicacion.component.html',\n  styleUrls: ['./ubicacion.component.css']\n})\nexport class UbicacionComponent implements OnInit {\n  scrollPosition = 0;\n  ubicaciones: any[] = [];\n  newUbicacion: any = {};\n  editingUbicacion: any = null;\n  error = '';\n\n  constructor(private ubicacionService: UbicacionService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadUbicaciones();\n  }\n\n  scrollRight(): void {\n    this.scrollPosition += 200;  // Ajusta este valor según necesites\n  }\n\n  scrollLeft(): void {\n    this.scrollPosition -= 200;  // Ajusta este valor según necesites\n  }\n\n  loadUbicaciones(): void {\n    this.ubicacionService.getUbicaciones().subscribe(\n      data => {\n        this.ubicaciones = data;\n      },\n      err => {\n        console.error('Error obteniendo ubicaciones:', err);\n        this.error = 'Error en el servidor al obtener ubicaciones.';\n      }\n    );\n  }\n\n  createUbicacion(): void {\n    this.ubicacionService.createUbicacion(this.newUbicacion).subscribe(\n      data => {\n        this.ubicaciones.push(data);\n        this.newUbicacion = {};\n        this.router.navigate(['ubicacion']);\n      },\n      err => {\n        console.error('Error al añadir la ubicación:', err);\n        this.error = 'Error en el servidor al añadir la ubicación.';\n      }\n    );\n  }\n\n  saveUbicacion(ubicacion: any): void {\n    this.ubicacionService.createUbicacion(ubicacion).subscribe(\n      data => {\n        this.ubicaciones.push(data);\n        this.newUbicacion = {};\n        this.router.navigate(['ubicacion']);\n      },\n      err => {\n        console.error('Error creando ubicación:', err);\n        this.error = 'Error en el servidor al crear ubicación.';\n      }\n    );\n  }\n\n  editUbicacion(ubicacion: any): void {\n    this.editingUbicacion = { ...ubicacion };\n  }\n\n  updateUbicacion(ubi_id: number): void {\n    this.saveUpdatedUbicacion(ubi_id);\n  }\n\n  saveUpdatedUbicacion(ubi_id: number): void {\n    this.ubicacionService.updateUbicacion(ubi_id, this.editingUbicacion).subscribe(\n      data => {\n        const index = this.ubicaciones.findIndex(u => u.ubi_id === this.editingUbicacion.ubi_id);\n        if (index !== -1) {\n          this.ubicaciones[index] = data;\n        }\n        this.editingUbicacion = null;\n        this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de actualizar\n      },\n      err => {\n        console.error('Error actualizando ubicación:', err);\n        this.error = 'Error en el servidor al actualizar ubicación.';\n      }\n    );\n  }\n\n  deleteUbicacion(ubi_id: number): void {\n    if (ubi_id) {\n      this.ubicacionService.deleteUbicacion(ubi_id).subscribe(\n        data => {\n          this.ubicaciones = this.ubicaciones.filter(u => u.ubi_id !== ubi_id);\n          this.router.navigate(['ubicacion']); // Navegar a la lista de ubicaciones después de eliminar\n        },\n        err => {\n          console.error('Error eliminando ubicación:', err);\n          this.error = 'Error en el servidor al eliminar ubicación.';\n        }\n      );\n    } else {\n      console.error('ID de ubicación no válido:', ubi_id);\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AASjD,IAAaC,kBAAkB,GAA/B,MAAaA,kBAAkB;EAO7BC,YAAoBC,gBAAkC,EAAUC,MAAc;IAA1D,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,MAAM,GAANA,MAAM;IANtE,KAAAC,cAAc,GAAG,CAAC;IAClB,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,gBAAgB,GAAQ,IAAI;IAC5B,KAAAC,KAAK,GAAG,EAAE;EAEwE;EAElFC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACP,cAAc,IAAI,GAAG,CAAC,CAAE;EAC/B;;EAEAQ,UAAUA,CAAA;IACR,IAAI,CAACR,cAAc,IAAI,GAAG,CAAC,CAAE;EAC/B;;EAEAM,eAAeA,CAAA;IACb,IAAI,CAACR,gBAAgB,CAACW,cAAc,EAAE,CAACC,SAAS,CAC9CC,IAAI,IAAG;MACL,IAAI,CAACV,WAAW,GAAGU,IAAI;IACzB,CAAC,EACDC,GAAG,IAAG;MACJC,OAAO,CAACT,KAAK,CAAC,+BAA+B,EAAEQ,GAAG,CAAC;MACnD,IAAI,CAACR,KAAK,GAAG,8CAA8C;IAC7D,CAAC,CACF;EACH;EAEAU,eAAeA,CAAA;IACb,IAAI,CAAChB,gBAAgB,CAACgB,eAAe,CAAC,IAAI,CAACZ,YAAY,CAAC,CAACQ,SAAS,CAChEC,IAAI,IAAG;MACL,IAAI,CAACV,WAAW,CAACc,IAAI,CAACJ,IAAI,CAAC;MAC3B,IAAI,CAACT,YAAY,GAAG,EAAE;MACtB,IAAI,CAACH,MAAM,CAACiB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EACDJ,GAAG,IAAG;MACJC,OAAO,CAACT,KAAK,CAAC,+BAA+B,EAAEQ,GAAG,CAAC;MACnD,IAAI,CAACR,KAAK,GAAG,8CAA8C;IAC7D,CAAC,CACF;EACH;EAEAa,aAAaA,CAACC,SAAc;IAC1B,IAAI,CAACpB,gBAAgB,CAACgB,eAAe,CAACI,SAAS,CAAC,CAACR,SAAS,CACxDC,IAAI,IAAG;MACL,IAAI,CAACV,WAAW,CAACc,IAAI,CAACJ,IAAI,CAAC;MAC3B,IAAI,CAACT,YAAY,GAAG,EAAE;MACtB,IAAI,CAACH,MAAM,CAACiB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EACDJ,GAAG,IAAG;MACJC,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEQ,GAAG,CAAC;MAC9C,IAAI,CAACR,KAAK,GAAG,0CAA0C;IACzD,CAAC,CACF;EACH;EAEAe,aAAaA,CAACD,SAAc;IAC1B,IAAI,CAACf,gBAAgB,GAAG;MAAE,GAAGe;IAAS,CAAE;EAC1C;EAEAE,eAAeA,CAACC,MAAc;IAC5B,IAAI,CAACC,oBAAoB,CAACD,MAAM,CAAC;EACnC;EAEAC,oBAAoBA,CAACD,MAAc;IACjC,IAAI,CAACvB,gBAAgB,CAACsB,eAAe,CAACC,MAAM,EAAE,IAAI,CAAClB,gBAAgB,CAAC,CAACO,SAAS,CAC5EC,IAAI,IAAG;MACL,MAAMY,KAAK,GAAG,IAAI,CAACtB,WAAW,CAACuB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAK,IAAI,CAAClB,gBAAgB,CAACkB,MAAM,CAAC;MACxF,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACtB,WAAW,CAACsB,KAAK,CAAC,GAAGZ,IAAI;;MAEhC,IAAI,CAACR,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACJ,MAAM,CAACiB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,EACDJ,GAAG,IAAG;MACJC,OAAO,CAACT,KAAK,CAAC,+BAA+B,EAAEQ,GAAG,CAAC;MACnD,IAAI,CAACR,KAAK,GAAG,+CAA+C;IAC9D,CAAC,CACF;EACH;EAEAsB,eAAeA,CAACL,MAAc;IAC5B,IAAIA,MAAM,EAAE;MACV,IAAI,CAACvB,gBAAgB,CAAC4B,eAAe,CAACL,MAAM,CAAC,CAACX,SAAS,CACrDC,IAAI,IAAG;QACL,IAAI,CAACV,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC0B,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAKA,MAAM,CAAC;QACpE,IAAI,CAACtB,MAAM,CAACiB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;MACvC,CAAC,EACDJ,GAAG,IAAG;QACJC,OAAO,CAACT,KAAK,CAAC,6BAA6B,EAAEQ,GAAG,CAAC;QACjD,IAAI,CAACR,KAAK,GAAG,6CAA6C;MAC5D,CAAC,CACF;KACF,MAAM;MACLS,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAEiB,MAAM,CAAC;;EAEvD;CACD;AAtGYzB,kBAAkB,GAAAgC,UAAA,EAL9BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWnC,kBAAkB,CAsG9B;SAtGYA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}