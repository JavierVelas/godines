{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/rutina.Service\";\nimport * as i2 from \"@angular/router\";\nclass RutinaComponent {\n  constructor(rutinaService, router) {\n    this.rutinaService = rutinaService;\n    this.router = router;\n    this.scrollPosition = 0;\n    this.rutinas = [];\n    this.newRutina = {};\n    this.editingRutina = null;\n    this.selectedFile = null;\n    this.error = '';\n    this.filter = '';\n    this.apiUrl = 'http://localhost:3000/api/rutina'; // Mantengo la URL por si es usada en algún otro lugar\n  }\n\n  ngOnInit() {\n    this.loadRutinas();\n  }\n  loadRutinas() {\n    this.rutinaService.getRutinas().subscribe(data => {\n      this.rutinas = data;\n    }, err => {\n      console.error('Error obteniendo rutinas:', err); // Cambié productos por rutinas\n      this.error = 'Error en el servidor al obtener rutinas.'; // Cambié el mensaje\n    });\n  }\n\n  onFileChange(event) {\n    const element = event.target;\n    if (element.files && element.files.length > 0) {\n      this.newRutina.imagen_url = element.files[0]; // Cambié imagen_pro por imagen_url\n    }\n  }\n\n  createRutina() {\n    this.rutinaService.createRutina(this.newRutina).subscribe(data => {\n      this.rutinas.push(data);\n      this.newRutina = {};\n      this.router.navigate(['rutina']);\n    }, err => {\n      console.error('Error creando rutina:', err); // Cambié producto por rutina\n      this.error = 'Error en el servidor al crear rutina.'; // Cambié el mensaje\n    });\n  }\n\n  editRutina(rutina) {\n    this.editingRutina = {\n      ...rutina\n    };\n  }\n  updateRutina(id_rutina) {\n    if (this.selectedFile && !this.editingRutina.imagen_url) {\n      // Cambié imagen_pro por imagen_url\n      this.rutinaService.uploadImagen(this.selectedFile).subscribe(response => {\n        this.editingRutina.imagen_url = response.imageUrl; // Cambié imagen_pro por imagen_url\n        this.saveUpdatedRutina(id_rutina);\n      }, error => {\n        console.error('Error al cargar la imagen:', error);\n      });\n    } else {\n      this.saveUpdatedRutina(id_rutina);\n    }\n  }\n  saveUpdatedRutina(id_rutina) {\n    this.rutinaService.updateRutina(id_rutina, this.editingRutina).subscribe(data => {\n      const index = this.rutinas.findIndex(p => p.id_rutina === id_rutina);\n      if (index !== -1) {\n        this.rutinas[index] = data;\n      }\n      this.editingRutina = null;\n    }, err => {\n      console.error('Error actualizando rutina:', err); // Cambié producto por rutina\n      this.error = 'Error en el servidor al actualizar rutina.'; // Cambié el mensaje\n    });\n  }\n\n  deleteRutina(id) {\n    if (id) {\n      this.rutinaService.deleteRutina(id).subscribe(data => {\n        this.rutinas = this.rutinas.filter(p => p.id_rutina !== id);\n        this.router.navigate(['rutina']);\n      }, err => {\n        console.error('Error eliminando la rutina:', err); // Cambié producto por rutina\n        this.error = 'Error en el servidor al eliminar rutina.'; // Cambié el mensaje\n      });\n    } else {\n      console.error('No se encontró la rutina:', id); // Cambié ejercicio por rutina\n    }\n  }\n  static #_ = this.ɵfac = function RutinaComponent_Factory(t) {\n    return new (t || RutinaComponent)(i0.ɵɵdirectiveInject(i1.RutinaService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RutinaComponent,\n    selectors: [[\"app-rutina\"]],\n    decls: 0,\n    vars: 0,\n    template: function RutinaComponent_Template(rf, ctx) {},\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RutinaComponent };","map":{"version":3,"names":["RutinaComponent","constructor","rutinaService","router","scrollPosition","rutinas","newRutina","editingRutina","selectedFile","error","filter","apiUrl","ngOnInit","loadRutinas","getRutinas","subscribe","data","err","console","onFileChange","event","element","target","files","length","imagen_url","createRutina","push","navigate","editRutina","rutina","updateRutina","id_rutina","uploadImagen","response","imageUrl","saveUpdatedRutina","index","findIndex","p","deleteRutina","id","_","i0","ɵɵdirectiveInject","i1","RutinaService","i2","Router","_2","selectors","decls","vars","template","RutinaComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\cardio express\\frontend\\componentes\\rutina\\rutina.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RutinaService } from 'src/app/services/rutina.Service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-rutina',\n  templateUrl: './rutina.component.html',\n  styleUrls: ['./rutina.component.css']\n})\nexport class RutinaComponent implements OnInit { // Cambié ProductosComponent por RutinaComponent\n  scrollPosition = 0;\n  rutinas: any[] = [];\n  newRutina: any = {};\n  editingRutina: any = null;\n  selectedFile: File | null = null; \n  error = '';\n  filter: string = '';\n\n  private apiUrl = 'http://localhost:3000/api/rutina'; // Mantengo la URL por si es usada en algún otro lugar\n\n  constructor(private rutinaService: RutinaService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadRutinas();\n  }\n\n  loadRutinas(): void {\n    this.rutinaService.getRutinas().subscribe(\n      data => {\n        this.rutinas = data;\n      },\n      err => {\n        console.error('Error obteniendo rutinas:', err); // Cambié productos por rutinas\n        this.error = 'Error en el servidor al obtener rutinas.'; // Cambié el mensaje\n      }\n    );\n  }\n\n  onFileChange(event: Event): void {\n    const element = event.target as HTMLInputElement;\n    if (element.files && element.files.length > 0) {\n      this.newRutina.imagen_url = element.files[0]; // Cambié imagen_pro por imagen_url\n    }\n  }\n\n  createRutina(): void {\n    this.rutinaService.createRutina(this.newRutina).subscribe(\n      data => {\n        this.rutinas.push(data);\n        this.newRutina = {};\n        this.router.navigate(['rutina']);\n      },\n      err => {\n        console.error('Error creando rutina:', err); // Cambié producto por rutina\n        this.error = 'Error en el servidor al crear rutina.'; // Cambié el mensaje\n      }\n    );\n  }\n\n  editRutina(rutina: any): void {\n    this.editingRutina = { ...rutina };\n  }\n\n  updateRutina(id_rutina: number): void { // Cambié upateRutina por updateRutina\n    if (this.selectedFile && !this.editingRutina.imagen_url) { // Cambié imagen_pro por imagen_url\n      this.rutinaService.uploadImagen(this.selectedFile).subscribe(\n        response => {\n          this.editingRutina.imagen_url = response.imageUrl; // Cambié imagen_pro por imagen_url\n          this.saveUpdatedRutina(id_rutina);\n        },\n        error => {\n          console.error('Error al cargar la imagen:', error);\n        }\n      );\n    } else {\n      this.saveUpdatedRutina(id_rutina);\n    }\n  }\n\n  saveUpdatedRutina(id_rutina: number): void {\n    this.rutinaService.updateRutina(id_rutina, this.editingRutina).subscribe(\n      data => {\n        const index = this.rutinas.findIndex(p => p.id_rutina === id_rutina);\n        if (index !== -1) {\n          this.rutinas[index] = data;\n        }\n        this.editingRutina = null;\n      },\n      err => {\n        console.error('Error actualizando rutina:', err); // Cambié producto por rutina\n        this.error = 'Error en el servidor al actualizar rutina.'; // Cambié el mensaje\n      }\n    );\n  }\n\n  deleteRutina(id: number): void {\n    if (id) {\n      this.rutinaService.deleteRutina(id).subscribe(\n        data => {\n          this.rutinas = this.rutinas.filter(p => p.id_rutina !== id);\n          this.router.navigate(['rutina']);\n        },\n        err => {\n          console.error('Error eliminando la rutina:', err); // Cambié producto por rutina\n          this.error = 'Error en el servidor al eliminar rutina.'; // Cambié el mensaje\n        }\n      );\n    } else {\n      console.error('No se encontró la rutina:', id); // Cambié ejercicio por rutina\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}