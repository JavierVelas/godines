{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  login() {\n    this.authService.login(this.usuario, this.contraseña).subscribe(response => {\n      console.log('Login exitoso', response);\n      // Guardar el token en el local storage o manejar la autenticación\n    }, error => {\n      console.error('Error en el login', error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","login","usuario","contraseña","subscribe","response","console","log","error","__decorate","selector","templateUrl"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\componentes\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\n  usuario: string;\n  contraseña: string;\n\n  constructor(private authService: AuthService) { }\n\n  login() {\n    this.authService.login(this.usuario, this.contraseña).subscribe(response => {\n      console.log('Login exitoso', response);\n      // Guardar el token en el local storage o manejar la autenticación\n    }, error => {\n      console.error('Error en el login', error);\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,KAAKA,CAAA;IACH,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MACzEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;MACtC;IACF,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;CACD;AAfYV,cAAc,GAAAW,UAAA,EAJ1BZ,SAAS,CAAC;EACTa,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;CACd,CAAC,C,EACWb,cAAc,CAe1B;SAfYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}