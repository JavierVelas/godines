{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api'; // URL del backend\n  }\n  // Obtener todos los productos\n  getProductos() {\n    return this.http.get(this.apiUrl);\n  }\n  // Obtener un producto por ID\n  getProductoById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Crear un nuevo producto\n  createProducto(producto) {\n    return this.http.post(this.apiUrl, producto);\n  }\n  // Actualizar un producto existente\n  updateProducto(id, producto) {\n    return this.http.put(`${this.apiUrl}/${id}`, producto);\n  }\n  // Eliminar un producto por ID\n  deleteProducto(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function ProductoService_Factory(t) {\n    return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductoService,\n    factory: ProductoService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ProductoService };","map":{"version":3,"names":["ProductoService","constructor","http","apiUrl","getProductos","get","getProductoById","id","createProducto","producto","post","updateProducto","put","deleteProducto","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\980030881\\OneDrive\\Escritorio\\proyecto_web\\frontend\\src\\app\\services\\producto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n  private apiUrl = 'http://localhost:3000/api'; // URL del backend\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Obtener todos los productos\r\n  getProductos(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.apiUrl);\r\n  }\r\n\r\n  // Obtener un producto por ID\r\n  getProductoById(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Crear un nuevo producto\r\n  createProducto(producto: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, producto);\r\n  }\r\n\r\n  // Actualizar un producto existente\r\n  updateProducto(id: number, producto: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${id}`, producto);\r\n  }\r\n\r\n  // Eliminar un producto por ID\r\n  deleteProducto(id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAIA,MAGaA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B,CAAC,CAAC;EAEN;EAExC;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEA;EACAG,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACnD;EAEA;EACAC,cAAcA,CAACC,QAAa;IAC1B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACP,MAAM,EAAEM,QAAQ,CAAC;EACnD;EAEA;EACAE,cAAcA,CAACJ,EAAU,EAAEE,QAAa;IACtC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC7D;EAEA;EACAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACtD;EAAC,QAAAQ,CAAA,G;qBA5BUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPvB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}